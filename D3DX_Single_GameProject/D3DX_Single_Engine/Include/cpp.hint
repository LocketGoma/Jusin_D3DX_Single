// 힌트 파일은 Visual Studio IDE에서 함수 및 매크로 이름과 같은 Visual C++ 식별자를
// 해석하는 데 도움이 됩니다.
// 자세한 내용은 다음을 참조하세요. https://go.microsoft.com/fwlink/?linkid=865984
#define USING(Name)
// 힌트 파일은 Visual Studio IDE에서 함수 및 매크로 이름과 같은 Visual C++ 식별자를
// 해석하는 데 도움이 됩니다.
// 자세한 내용은 다음을 참조하세요. https://go.microsoft.com/fwlink/?linkid=865984
#define IMPLEMENT_SINGLETON(ClassName) ClassName* ClassName::m_pInstance = nullptr; ClassName* ClassName::Get_Instance() { if (nullptr == m_pInstance) m_pInstance = new ClassName; return m_pInstance; } _uint ClassName::Destroy_Instance() { _uint iRefCount = 0; if (m_pInstance) { iRefCount = m_pInstance->Release(); } return iRefCount; }
// 힌트 파일은 Visual Studio IDE에서 함수 및 매크로 이름과 같은 Visual C++ 식별자를
// 해석하는 데 도움이 됩니다.
// 자세한 내용은 다음을 참조하세요. https://go.microsoft.com/fwlink/?linkid=865984
#define USING(Name)
// 힌트 파일은 Visual Studio IDE에서 함수 및 매크로 이름과 같은 Visual C++ 식별자를
// 해석하는 데 도움이 됩니다.
// 자세한 내용은 다음을 참조하세요. https://go.microsoft.com/fwlink/?linkid=865984
#define USING(Name)
// 힌트 파일은 Visual Studio IDE에서 함수 및 매크로 이름과 같은 Visual C++ 식별자를
// 해석하는 데 도움이 됩니다.
// 자세한 내용은 다음을 참조하세요. https://go.microsoft.com/fwlink/?linkid=865984
#define IMPLEMENT_SINGLETON(ClassName) ClassName* ClassName::m_pInstance = nullptr; ClassName* ClassName::Get_Instance() { if (nullptr == m_pInstance) m_pInstance = new ClassName; return m_pInstance; } _uint ClassName::Destroy_Instance() { _uint iRefCount = 0; if (m_pInstance) { iRefCount = m_pInstance->Release(); } return iRefCount; }
